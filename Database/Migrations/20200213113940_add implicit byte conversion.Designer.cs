// <auto-generated />
using System;
using DataBase.DatabaseClasses;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(DemoCentralContext))]
    [Migration("20200213113940_add implicit byte conversion")]
    partial class addimplicitbyteconversion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DataBase.DatabaseClasses.Demo", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("DatabaseVersion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte>("DemoFileWorkerStatus")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("DemoFileWorkerVersion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Event")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<byte>("FileStatus")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Frames")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Md5hash")
                        .HasColumnType("longtext");

                    b.Property<byte>("Quality")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("Source")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("UploadStatus")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("UploadType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<long>("UploaderId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("MatchId");

                    b.ToTable("Demo","democentral");
                });

            modelBuilder.Entity("DataBase.DatabaseClasses.InQueueDemo", b =>
                {
                    b.Property<long>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("DDQUEUE")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DFWQUEUE")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Retries")
                        .HasColumnType("int");

                    b.Property<bool>("SOQUEUE")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("UploaderId")
                        .HasColumnType("bigint");

                    b.HasKey("MatchId");

                    b.ToTable("InQueue","democentral");
                });

            modelBuilder.Entity("DataBase.DatabaseClasses.Migrationhistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ContextKey")
                        .IsRequired()
                        .HasColumnType("varchar(300) CHARACTER SET utf8mb4")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<byte[]>("Model")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.HasKey("MigrationId");

                    b.ToTable("__efmigrationhistory","democentral");
                });
#pragma warning restore 612, 618
        }
    }
}
