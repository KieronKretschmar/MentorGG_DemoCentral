// <auto-generated />
using System;
using DemoCentral.DatabaseClasses;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DemoCentral.Migrations
{
    [DbContext(typeof(democentralContext))]
    partial class democentralContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DemoCentral.DatabaseClasses.Demo", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<byte>("DemoAnalyzerStatus")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<string>("DemoAnalyzerVersion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Event")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<byte>("FileStatus")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Md5hash")
                        .HasColumnName("MD5Hash")
                        .HasColumnType("longtext");

                    b.Property<byte>("Source")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime(6)");

                    b.Property<byte>("UploadStatus")
                        .HasColumnType("tinyint unsigned");

                    b.Property<byte>("UploadType")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<long>("UploaderId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("MatchId");

                    b.ToTable("Demo","democentral");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            DemoAnalyzerStatus = (byte)0,
                            DemoAnalyzerVersion = "",
                            FileStatus = (byte)0,
                            MatchDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = (byte)1,
                            UploadDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UploadStatus = (byte)0,
                            UploadType = (byte)0,
                            UploaderId = 1L
                        },
                        new
                        {
                            MatchId = 2,
                            DemoAnalyzerStatus = (byte)0,
                            DemoAnalyzerVersion = "",
                            FileStatus = (byte)0,
                            MatchDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = (byte)1,
                            UploadDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UploadStatus = (byte)0,
                            UploadType = (byte)0,
                            UploaderId = 2L
                        },
                        new
                        {
                            MatchId = 3,
                            DemoAnalyzerStatus = (byte)0,
                            DemoAnalyzerVersion = "",
                            FileStatus = (byte)0,
                            MatchDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Source = (byte)2,
                            UploadDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UploadStatus = (byte)0,
                            UploadType = (byte)0,
                            UploaderId = 3L
                        });
                });

            modelBuilder.Entity("DemoCentral.DatabaseClasses.InQueueDemo", b =>
                {
                    b.Property<long>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<bool>("DDQUEUE")
                        .HasColumnType("tinyint(1)");

                    b.Property<short>("DFWQUEUE")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Retries")
                        .HasColumnType("int");

                    b.Property<short>("SOQUEUE")
                        .HasColumnType("smallint");

                    b.Property<byte>("Source")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<byte>("UploadType")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<long>("UploaderId")
                        .HasColumnType("bigint(20)");

                    b.HasKey("MatchId");

                    b.ToTable("InQueue","democentral");
                });

            modelBuilder.Entity("DemoCentral.DatabaseClasses.Migrationhistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasColumnType("varchar(150) CHARACTER SET utf8mb4")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ContextKey")
                        .IsRequired()
                        .HasColumnType("varchar(300) CHARACTER SET utf8mb4")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<byte[]>("Model")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasColumnType("varchar(32) CHARACTER SET utf8mb4")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.HasKey("MigrationId");

                    b.ToTable("__efmigrationhistory","democentral");
                });
#pragma warning restore 612, 618
        }
    }
}
